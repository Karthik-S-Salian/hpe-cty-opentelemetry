input {
  # Tail the syslog fake logs
  kafka {
    bootstrap_servers => "127.0.0.1:9092"
    topics => ["logs"]
    codec => "json"
    group_id => "logstash-group"
  }
}

filter {
  json {
    source => "log"
    target => "log_data"
    remove_field => ["log"]
  }

  # Promote top-level fields
  ruby {
    code => '
      log_data = event.get("log_data")
      if log_data.is_a?(Hash)
        log_data.each { |k, v| event.set(k, v) }
      end
    '
  }

  # Flatten nested fields
  ruby {
    code => '
      attrs = event.get("Attributes")
      if attrs.is_a?(Hash)
        attrs.each { |k, v| event.set("attr_#{k}", v) }
        event.remove("Attributes")
      end

      res = event.get("Resource")
      if res.is_a?(Hash)
        res.each { |k, v| event.set("res_#{k}", v) }
        event.remove("Resource")
      end
    '
  }

  # Prepend year to timestamp
  ruby {
    code => '
      ts = event.get("Timestamp") rescue nil
      if ts
        year = Time.now.year
        event.set("parsed_timestamp", "#{year} #{ts}")
      end
    '
  }

  # Parse Timestamp into @timestamp
  date {
    match => ["parsed_timestamp", "yyyy MMM dd HH:mm:ss"]
    target => "@timestamp"
    timezone => "UTC"
  }

  mutate {
    remove_field => ["log_data", "parsed_timestamp", "Timestamp","event"]
  }

  ruby {
    code => '
      event.to_hash.keys.each do |k|
        v = event.remove(k)
        event.set(k.downcase.gsub(".", "_"), v)
      end
    '
  }



  # Prepare the payload for Loki, creating the streams structure
  ruby {
  code => '
    ts = event.get("@timestamp").to_f
    ts_adjusted = ts - 19800  # Subtract 5:30 (19800 seconds)
    ts_ns = (ts_adjusted * 1_000_000_000).to_i.to_s
    event.set("timestamp_ns_adjusted", ts_ns)
    data = event.to_hash
    payload = {
      "streams" => [
        {
          "stream" => {
            "job" => data["job"] || "logstash",
            "log_type" => data["logtype"]
          },
          "values" => [
            [ ts_ns, JSON.generate(data) ]
          ]
        }
      ]
    }
    event.set("loki_payload", payload)
  '
}

}


output {
  # Send to Loki
  http {
    url => "http://localhost:3100/loki/api/v1/push"
    http_method => "post"
    format => "message"
    content_type => "application/json"
    message => "%{loki_payload}"
  }

  # Debug output
  stdout { codec => rubydebug { metadata => true } }

}
